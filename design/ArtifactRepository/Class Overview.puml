@startuml
package "Artifact Repository" {
  interface "Artifact Repository" {
      ApplicationStack createApplicationStack()
      ApplicationStack modifyApplicationStack()
      ServiceTemplate createServiceTemplate()
      ServiceTemplate modifyServiceTemplate()
  }
  class ApplicationStack {
    string name
    string version
  }
  class ApplicationStacklet {
    string name
    string version
  }
  class Service {
    string name
    string version
    integer ports[]
    integer expose[]
    map parameters[]
  }
  class ServiceTemplate {
    string version
    integer ports[]
    integer expose[]
    map parameters
    string config
  }
  class Servicelet {
    map args
    integer expose[]
    }

  class RunScript {
    string event
    string script
    string parameters[]
  }
  class Image {
    string name
    string filename
  }
  class Environment {
    string name
  }
}
Service *--> Service: subServices
Service *--> ServiceTemplate : templates
ServiceTemplate o--> Environment : env
ServiceTemplate *--> RunScript : scripts
ServiceTemplate o--> Image : image
Servicelet o--> Environment : env
Servicelet o--> ServiceTemplate : template
ApplicationStack *--> "ApplicationStacklet" : stacklets
ApplicationStacklet o--> "Environment" : env
ApplicationStacklet *--> "Servicelet" : servicelets
ApplicationStack o--> "Service" : services

"CLI" ()-- "Artifact Repository"
"REST API" ()-- "Artifact Repository"
"Portal" ()-- "Artifact Repository"

package "Cloud Broker"  #ffffaa {}
package "Application Orchestrator" #ffffaa {}
package "Provision Engine" #ffffaa {}
package "Data Coordinator" #ffffaa {}
package "Operations Manager" #aaffff {}
package "Application Manager" #aaffff {}

"Operations Manager" --> "Artifact Repository"
"Application Manager" --> "Artifact Repository"
"Artifact Repository" --> "Cloud Broker"
"Artifact Repository" --> "Provision Engine"
"Artifact Repository" --> "Data Coordinator"
"Artifact Repository" --> "Application Orchestrator"

@enduml
